name: Publish to PYPI

on:
  push:
    branches: [ master ]
    tags:
      - "v*"
  pull_request:
    branches: [ master ]

jobs:
  manylinux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine nose
    - name: Setup.py hack
      run: |
        echo "[install]" > python/setup.cfg
        echo "install_lib=" >> python/setup.cfg
    - name: Build manylinux Python wheels
      uses: zhreshold/python-wheels-manylinux-build@v0.0.1
      with:
        python-versions: 'cp36-cp36m'
        build-requirements: 'numpy'
        pre-build-command: 'sh ../tools/build_manylinux2010.sh'
        package-path: 'python'
        pip-wheel-args: '-w ./dist --no-deps'
    - name: Sanity test
      run: |
        pwd
        ls ./python/dist/
        sudo rm ./python/dist/decord-*-linux_x86_64.whl
        which python
        which pip
        sudo -H find ./python/dist/ -type f -iname "decord*manylinux2010_x86_64.whl" -exec sh -c "zip --delete '{}' 'numpy/*' | true" \;
        sudo -H find ./python/dist/ -type f -iname "decord*manylinux2010_x86_64.whl" -exec sh -c "zip --delete '{}' 'pip/*' | true" \;
        sudo -H find ./python/dist/ -type f -iname "decord*manylinux2010_x86_64.whl" -exec sh -c "unzip '{}' -d ./decord-cwd" \;
        ls
        cd ./decord-cwd
        ls -la
        sudo -H find . -type d -iname "decord-*.dist-info" -exec sh -c "echo decord > '{}'/top_level.txt" \;
        sudo -H find . -type d -iname "decord-*.dist-info" -exec sh -c "sed -i '/^numpy/d' '{}'/RECORD" \;
        sudo -H find . -type d -iname "decord-*.dist-info" -exec sh -c "sed -i '/^pip/d' '{}'/RECORD" \;
        cd ..
        sudo -H find ./python/dist/ -type f -iname "decord*manylinux2010_x86_64.whl" -exec sh -c "rm '{}' && cd decord-cwd && zip -r ../'{}' ./*" \;
        find ./python/dist/ -type f -iname "decord*manylinux2010_x86_64.whl" -exec sh -c "which python && python -m pip install '{}' --force-reinstall" \;
        python -c "import decord; print(decord.__version__)"
        python -m nose -v ./tests/python/unittests/test_video_reader.py
    - name: Rename wheel
      run: |
        cd ./python
        ls -la ./dist
        sudo chmod 755 -R ./dist
        ls -la ./dist/
        cd dist
        sudo find . -type f -iname "decord*.whl" -exec bash -c 'mv $1 ${1/\cp36-cp36m/py3-none}' -- {} \;
        ls -lh .
    - name: Store the source distribution
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: python/dist/*.whl
        retention-days: 14
        if-no-files-found: error
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine nose wheel
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.4
      with:
        cmake-version: '3.16.x'
    - name: Setup.py hack
      run: |
        echo "[install]" > python/setup.cfg
        echo "install_lib=" >> python/setup.cfg
    - name: Build deps and library
      run: |
        sudo chmod +x tools/build_macos_10_9.sh
        tools/build_macos_10_9.sh || { echo "Build command failed."; exit 1; }
    - name: Build wheel
      run: |
        cd python
        python setup.py bdist_wheel
        find ./dist/ -type f -iname "decord*.whl" -exec sh -c 'mv $0 ${0/\10_14/10_9}' {} \;
    - name: Fix wheel by delocate
      run: |
        FFMPEG_DIR="$HOME"/ffmpeg_build
        python -m pip install delocate
        ls -lh ./python/dist/*.whl
        find ./python/dist/ -type f -iname "decord*.whl" -exec sh -c "delocate-listdeps '{}'" \;
        mkdir -p ./python/dist/fixed_wheel
        cd ./python/dist/
        cp "$FFMPEG_DIR"/lib/libvpx*.dylib .
        find . -type f -iname "decord*.whl" -exec sh -c "delocate-wheel -w fixed_wheel -v '{}'" \;
        ls -lh ./fixed_wheel
    - name: Sanity Test
      run: |
        ls ./python/dist/fixed_wheel
        find ./python/dist/fixed_wheel -type f -iname "decord*.whl" -exec sh -c "python -m pip install '{}'" \;
        python -m nose -v ./tests/python/unittests/test_video_reader.py
    - name: Store the source distribution
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: python/dist/fixed_wheel/*.whl
        retention-days: 14
        if-no-files-found: error
  windows:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: '3.6'
        architecture: 'x64'
    - name: Download ffmpeg libs
      run: |
        curl -O -L https://github.com/zhreshold/decord-distro/files/5314603/ffmpeg-4.2.1-win64-dev.zip
        curl -O -L https://github.com/vmlankub/CloudFiles/raw/5ec06ef8b7568cc3b84d310ef146c63c5e693b54/ffmpeg/ffmpeg-4.2.1-win64-shared.zip
    - name: Extract ffmpeg libs
      shell: powershell
      run: Expand-Archive -LiteralPath ffmpeg-4.2.1-win64-dev.zip -DestinationPath d:\ ; Expand-Archive -LiteralPath ffmpeg-4.2.1-win64-shared.zip -DestinationPath d:\
    - name: Configure
      run: |
        dir d:/ffmpeg-4.2.1-win64-dev/lib
        dir d:/ffmpeg-4.2.1-win64-dev/include
        cmake --version
        mkdir build && cd build
        cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_CXX_FLAGS="/DDECORD_EXPORTS" -DCMAKE_CONFIGURATION_TYPES="Release" -DFFMPEG_INCLUDE_DIR="d:/ffmpeg-4.2.1-win64-dev/include" -DFFMPEG_LIBRARIES="d:/ffmpeg-4.2.1-win64-dev/lib/*.lib" ..
    - name: Build
      run: |
        cmake --build build --config Release
    - name: Build wheel
      run: |
        python -m pip install pip --upgrade
        python -m pip install wheel nose twine
        cd python && python setup.py bdist_wheel
        dir ./dist/
    - name: Fix wheel deps
      shell: cmd
      run: |
        FOR /F "tokens=* USEBACKQ" %%F IN (`dir /b /a-d python\dist\decord*`) DO (SET wheel_name=%%F)
        echo wheel_name=%wheel_name%
        cd python\dist
        7z x "%wheel_name%" -ofixed_wheel
        dir fixed_wheel
        xcopy /Y d:\ffmpeg-4.2.1-win64-shared\bin\*.dll fixed_wheel\decord
        copy c:\windows\system32\MSVCP140.dll fixed_wheel\decord
        copy c:\windows\system32\VCRUNTIME140.dll fixed_wheel\decord
        dir fixed_wheel\decord
    - name: Recreate wheel
      shell: powershell
      run: |
        cd python\dist
        mkdir output
        $wheel_path = Get-ChildItem *.whl
        $wheel_name = $wheel_path.BaseName
        7z a -tzip "output/${wheel_name}.whl" .\fixed_wheel\*
        cd output
        Get-ChildItem *.whl  |Rename-Item -NewName {$_.name -replace 'py3-none-any','py3-none-win_amd64'}
        dir .
    - name: Sanity test
      shell: cmd
      run: |
        FOR /F "tokens=* USEBACKQ" %%F IN (`dir /b /a-d python\dist\output\decord*`) DO (SET wheel_name=%%F)
        echo wheel_name=%wheel_name%
        cd python\dist\output
        python -m pip install --force-reinstall --no-cache-dir %wheel_name%
        python -m nose -v ../../../tests/python/unittests/test_video_reader.py
    - name: Store the source distribution
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: python/dist/output/*.whl
        retention-days: 14
        if-no-files-found: error
  deploy:
    name: Publish to (Test)PyPI
    needs:
    - manylinux
    - macos
    - windows
    runs-on: ubuntu-latest

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v2
      with:
        name: python-package-distributions
        path: dist/
    - name: List artifects
      run: |
        ls -lh dist/
    - name: Publish package to TestPyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        packages_dir: dist/
        skip_existing: true
    - name: Publish package to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: dist/
        skip_existing: true
